#!/bin/bash
# Post-Image Script for PITLAB Wallet
# Configures LCD drivers in the final SD card image

set -e

# Arguments from Buildroot
TARGET_DIR="$1"
BOARD_DIR="$(dirname "$0")"
BINARIES_DIR="$2"

# Build configuration (passed via environment)
DISPLAY="${PITLAB_DISPLAY:-hdmi}"
ROTATION="${PITLAB_ROTATION:-0}"
LCD_SHOW_DIR="${PITLAB_LCD_SHOW_DIR}"

echo "========================================"
echo "PITLAB Post-Image: LCD Driver Setup"
echo "========================================"
echo "Display: $DISPLAY"
echo "Rotation: $ROTATION"
echo "Target: $TARGET_DIR"
echo "========================================"

# Source the LCD driver database
source "${BOARD_DIR}/lcd-drivers.sh" 2>/dev/null || {
    echo "Warning: LCD driver database not found, using defaults"
}

# Get display configuration
DISPLAY_CONFIG=$(get_display_config "$DISPLAY" 2>/dev/null || echo "")

if [ -z "$DISPLAY_CONFIG" ]; then
    echo "Warning: Unknown display '$DISPLAY', using HDMI defaults"
    DISPLAY_CONFIG="HDMI::0:1920:1080::hdmi_standard"
fi

# Parse configuration
SCRIPT_NAME=$(parse_display_config "$DISPLAY_CONFIG" "script")
OVERLAY_FILE=$(parse_display_config "$DISPLAY_CONFIG" "overlay")
DEFAULT_ROTATION=$(parse_display_config "$DISPLAY_CONFIG" "rotation")
WIDTH=$(parse_display_config "$DISPLAY_CONFIG" "width")
HEIGHT=$(parse_display_config "$DISPLAY_CONFIG" "height")
TOUCH_TYPE=$(parse_display_config "$DISPLAY_CONFIG" "touch")

# Use provided rotation or default
FINAL_ROTATION="${ROTATION:-$DEFAULT_ROTATION}"

echo "Configuration:"
echo "  Script: $SCRIPT_NAME"
echo "  Overlay: $OVERLAY_FILE"
echo "  Resolution: ${WIDTH}x${HEIGHT}"
echo "  Touch: $TOUCH_TYPE"
echo "  Rotation: $FINAL_ROTATION°"
echo ""

# ============================================================================
# 1. Configure /boot/config.txt (RPi Firmware Configuration)
# ============================================================================

BOOT_CONFIG="${TARGET_DIR}/boot/config.txt"

echo "[Step 1] Configuring boot/config.txt..."

# Backup original if it exists
if [ -f "$BOOT_CONFIG" ]; then
    cp "$BOOT_CONFIG" "${BOOT_CONFIG}.original"
fi

# Create/append LCD configuration
cat >> "$BOOT_CONFIG" << EOF

# ============================================
# PITLAB LCD Display Configuration
# Display: $DISPLAY
# Rotation: $FINAL_ROTATION°
# Generated by post-image.sh
# ============================================

# Force HDMI output
hdmi_force_hotplug=1
hdmi_drive=2

# Enable interfaces
dtparam=i2c_arm=on
dtparam=spi=on
enable_uart=1

EOF

# Add overlay if specified
if [ -n "$OVERLAY_FILE" ]; then
    echo "dtoverlay=${OVERLAY_FILE}:rotate=${FINAL_ROTATION}" >> "$BOOT_CONFIG"
    
    # Copy overlay file if available from LCD-show
    if [ -n "$LCD_SHOW_DIR" ] && [ -f "${LCD_SHOW_DIR}/usr/${OVERLAY_FILE}-overlay.dtb" ]; then
        mkdir -p "${TARGET_DIR}/boot/overlays"
        cp "${LCD_SHOW_DIR}/usr/${OVERLAY_FILE}-overlay.dtb" "${TARGET_DIR}/boot/overlays/"
        cp "${LCD_SHOW_DIR}/usr/${OVERLAY_FILE}-overlay.dtb" "${TARGET_DIR}/boot/overlays/${OVERLAY_FILE}.dtbo"
        echo "  ✓ Copied overlay: ${OVERLAY_FILE}"
    fi
fi

# Add HDMI configuration based on display type
case "$SCRIPT_NAME" in
    LCD35-show|MHS35-show|LCD32-show|LCD28-show|LCD24-show)
        # GPIO/SPI displays with HDMI fallback
        cat >> "$BOOT_CONFIG" << EOF
# Display timings
hdmi_group=2
hdmi_mode=87
hdmi_cvt ${WIDTH} ${HEIGHT} 60 6 0 0 0
EOF
        ;;
    LCD5-show|LCD7*-show|LCD10*-show)
        # HDMI displays
        cat >> "$BOOT_CONFIG" << EOF
# HDMI display settings
hdmi_group=2
hdmi_mode=87
hdmi_cvt ${WIDTH} ${HEIGHT} 60 6 0 0 0
config_hdmi_boost=7
max_usb_current=1
EOF
        ;;
    HDMI|*)
        # Standard HDMI
        cat >> "$BOOT_CONFIG" << EOF
# Standard HDMI output
display_auto_detect=1
EOF
        ;;
esac

# Add rotation setting (for HDMI displays)
if [ "$FINAL_ROTATION" != "0" ]; then
    case "$FINAL_ROTATION" in
        90|270)
            echo "display_rotate=1" >> "$BOOT_CONFIG"
            ;;
        180)
            echo "display_rotate=2" >> "$BOOT_CONFIG"
            ;;
        *)
            echo "display_rotate=0" >> "$BOOT_CONFIG"
            ;;
    esac
fi

echo "  ✓ Boot configuration complete"

# ============================================================================
# 2. Configure Touchscreen Calibration (if touch-enabled)
# ============================================================================

if [ -n "$TOUCH_TYPE" ] && [ "$TOUCH_TYPE" != "" ]; then
    echo "[Step 2] Configuring touchscreen..."
    
    XORG_CONF_DIR="${TARGET_DIR}/etc/X11/xorg.conf.d"
    mkdir -p "$XORG_CONF_DIR"
    
    # Remove conflicting libinput config
    rm -f "${XORG_CONF_DIR}/40-libinput.conf"
    
    # Determine calibration file based on display and rotation
    CALIB_FILE="99-calibration.conf"
    
    # Check if we have calibration data from LCD-show
    if [ -n "$LCD_SHOW_DIR" ]; then
        # Try to find matching calibration file
        DISPLAY_ID=$(echo "$DISPLAY" | tr '[:upper:]' '[:lower:]' | sed 's/lcd//' | sed 's/mhs//' | sed 's/mpi//')
        CALIB_SOURCE="${LCD_SHOW_DIR}/usr/99-calibration.conf-${DISPLAY_ID}-${FINAL_ROTATION}"
        
        if [ -f "$CALIB_SOURCE" ]; then
            cp "$CALIB_SOURCE" "${XORG_CONF_DIR}/${CALIB_FILE}"
            echo "  ✓ Installed touchscreen calibration for ${DISPLAY} @ ${FINAL_ROTATION}°"
        else
            # Generate generic calibration
            cat > "${XORG_CONF_DIR}/${CALIB_FILE}" << EOF
Section "InputClass"
    Identifier "calibration"
    MatchProduct "ADS7846 Touchscreen"
    Option "Calibration" "200 3900 200 3900"
    Option "SwapAxes" "0"
    Option "InvertX" "0"
    Option "InvertY" "0"
EndSection
EOF
            echo "  ✓ Generated generic touchscreen calibration"
        fi
    fi
    
    # Install evdev if needed
    if [ -d "${TARGET_DIR}/usr/share/X11/xorg.conf.d" ]; then
        if [ -f "${TARGET_DIR}/usr/share/X11/xorg.conf.d/10-evdev.conf" ]; then
            cp "${TARGET_DIR}/usr/share/X11/xorg.conf.d/10-evdev.conf" \
               "${TARGET_DIR}/usr/share/X11/xorg.conf.d/45-evdev.conf"
        fi
    fi
fi

# ============================================================================
# 3. Configure Framebuffer Copy (for SPI displays)
# ============================================================================

case "$SCRIPT_NAME" in
    LCD35-show|LCD32-show|LCD28-show|LCD24-show|MHS*-show)
        echo "[Step 3] Configuring framebuffer copy (FBCP)..."
        
        # Note: FBCP must be built separately and included in overlay
        if [ -f "${TARGET_DIR}/usr/local/bin/fbcp" ]; then
            # Add fbcp to startup
            RC_LOCAL="${TARGET_DIR}/etc/rc.local"
            if [ -f "$RC_LOCAL" ]; then
                # Insert fbcp before 'exit 0'
                sed -i '/^exit 0/i /usr/local/bin/fbcp &' "$RC_LOCAL"
                echo "  ✓ FBCP added to rc.local"
            else
                # Create rc.local
                cat > "$RC_LOCAL" << 'EOF'
#!/bin/sh -e
# Launch framebuffer copy for SPI displays
/usr/local/bin/fbcp &
exit 0
EOF
                chmod +x "$RC_LOCAL"
                echo "  ✓ Created rc.local with FBCP"
            fi
        else
            echo "  ⚠ Warning: FBCP not found, SPI display may not work"
        fi
        ;;
esac

# ============================================================================
# 4. Create Display Info File
# ============================================================================

echo "[Step 4] Creating display info file..."

cat > "${TARGET_DIR}/etc/pitlab-display.conf" << EOF
# PITLAB Wallet Display Configuration
DISPLAY_NAME=${DISPLAY}
DISPLAY_SCRIPT=${SCRIPT_NAME}
DISPLAY_OVERLAY=${OVERLAY_FILE}
DISPLAY_WIDTH=${WIDTH}
DISPLAY_HEIGHT=${HEIGHT}
DISPLAY_ROTATION=${FINAL_ROTATION}
DISPLAY_TOUCH=${TOUCH_TYPE}
BUILD_DATE=$(date -u +"%Y-%m-%d %H:%M:%S UTC")
EOF

echo "  ✓ Display info saved to /etc/pitlab-display.conf"

# ============================================================================
# 5. Summary
# ============================================================================

echo ""
echo "========================================"
echo "LCD Driver Setup Complete!"
echo "========================================"
echo "Display: $DISPLAY ($SCRIPT_NAME)"
echo "Resolution: ${WIDTH}x${HEIGHT}"
echo "Rotation: ${FINAL_ROTATION}°"
echo "Touch: ${TOUCH_TYPE:-none}"
echo ""
echo "Configuration files modified:"
echo "  • /boot/config.txt"
[ -n "$TOUCH_TYPE" ] && echo "  • /etc/X11/xorg.conf.d/99-calibration.conf"
[ -f "${TARGET_DIR}/etc/rc.local" ] && echo "  • /etc/rc.local (FBCP)"
echo "  • /etc/pitlab-display.conf"
echo "========================================"
